version: '2.1'

services:

  db:
    container_name: kong_database
    image: postgres:9.6
    volumes:
      - .data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 20s
      timeout: 5s
      retries: 5
    networks:
      - kong-network

  kong-migration:
    image: kong:0.14-alpine
    depends_on:
      db:
        condition: service_healthy
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=db
    networks:
      - kong-network
    command: kong migrations up

  kong:
    container_name: kong
    image: kong:0.14-alpine
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    volumes:
      - .data:/var/lib/postgresql/data
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=db
      - KONG_CASSANDRA_CONTACT_POINTS=db
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stdout
      - KONG_ADMIN_ERROR_LOG=/dev/stdout
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    depends_on:
      db:
        condition: service_healthy
      kong-migration:
        condition: service_started
    networks:
      - kong-network

  kong-admin-migration:
    image: pantsel/konga:0.13.0
    environment:
      - DB_ADAPTER=postgres
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=kong
      - DB_DATABASE=konga_db
      - KONGA_LOG_LEVEL=debug
    depends_on:
      db:
        condition: service_healthy
    command: -c prepare
    networks:
      - kong-network

  kong-admin:
    container_name: kong-admin
    image: pantsel/konga:0.13.0
    ports:
      - 1337:1337
    environment:
      - DB_ADAPTER=postgres
      - DB_HOST=db
      - DB_USER=kong
      - DB_DATABASE=konga_db
      - KONGA_HOOK_TIMEOUT=120000
      - NODE_ENV=production
    depends_on:
      kong:
        condition: service_started
      kong-admin-migration:
        condition: service_started

    volumes:
      - .data:/var/lib/postgresql/data
    networks:
      - kong-network

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    depends_on:
      kong:
        condition: service_started
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - kong-network

  redis:
    image: redis:3.2
    ports:
        - 6379:6379

  grafana:
    container_name: grafana
    image: grafana/grafana
    depends_on:
      prometheus:
        condition: service_started
      redis:
        condition: service_started
    ports:
      - 3000:3000
    user: "1001"
    volumes:
      - ./grafana_data:/var/lib/grafana
    environment:
      - GF_DATABASE_URL=postgres://kong@db:5432/grafana
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=123mudar
      - GF_PATHS_LOGS=/dev/stdout
      - GF_SERVER_PROTOCOL=http
      - GF_SERVER_DOMAIN=localhost
    networks:
      - kong-network

networks:
  kong-network:
    driver: bridge